<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <!-- Common. -->
    <context:component-scan base-package="ee.bcs.valiit.trikad" />

    <context:property-placeholder location="classpath:application.properties" file-encoding="UTF-8" />

    <!-- Web. -->
    <mvc:annotation-driven />

    <!--<mvc:resources mapping="/static/**" location="/static/" />
    <mvc:resources mapping="/css/**" location="/static/css/" />
    <mvc:resources mapping="/js/**" location="/static/js/" />-->

    <!-- Database. -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="${spring.datasource.url}" />
        <property name="username" value="${spring.datasource.username}" />
        <property name="password" value="${spring.datasource.password}" />
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="ee.bcs.valiit.trikad.bean" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="hibernate.show_sql">${hibernate.log.sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.log.sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.log.sql}</prop>
                <prop key="hibernate.jdbc.lob.non_contextual_creation">true</prop>
                <prop key="hibernate.default_schema">public</prop>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <prop key="hibernate.jdbc.time_zone">Europe/Tallinn</prop>
            </props>
        </property>
    </bean>

    <jpa:repositories base-package="ee.bcs.valiit.trikad.repository" />

    <!-- Transaction. -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven />

    <!-- Security. -->
    <security:global-method-security jsr250-annotations="enabled" pre-post-annotations="enabled" proxy-target-class="false" />

    <security:http entry-point-ref="httpStatusEntryPoint" auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/user" access="hasAnyAuthority('trikad.user', 'trikad.admin')" />
        <security:intercept-url pattern="/customer/**" access="hasAnyAuthority('trikad.user', 'trikad.admin')" />
        <security:form-login authentication-success-handler-ref="authenticationSuccessHandler"
                             login-page="/login"
                             authentication-failure-url="/login?error"
                             username-parameter="username"
                             password-parameter="password" />
        <security:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID" logout-success-url="/login?logout" />
        <!--suppress SpringModelInspection -->
        <security:csrf disabled="true" />
    </security:http>

    <bean id="httpStatusEntryPoint" class="org.springframework.security.web.authentication.HttpStatusEntryPoint">
        <constructor-arg value="UNAUTHORIZED" />
    </bean>

    <bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="${trikad.frontend.url}" />
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder hash="sha-256" />
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="select email, password, enabled from users where email = ?"
                                        authorities-by-username-query="select u.email as username, r.name as role from users u, user_role ur, role r where ur.user_id = u.id and r.id = ur.role_id and u.email = ?" />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>